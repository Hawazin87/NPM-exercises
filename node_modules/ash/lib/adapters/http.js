// (The MIT License)

// Copyright (c) 2012 Richard S Allinson <rsa@mountainmansoftware.com>

// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// 'Software'), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:

// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

/*jslint nomen: true*/

"use strict";

/*
    @param options object

    options = {
        root: <path to app root>
    }
*/

module.exports = function (options) {

    var requirejs = require("../amd")(options);

    return function (req, res, next) {

        /*
            Convert the URI to dispatch arguments

            http://localhost:3000/modules/api/ctrl/index?key=val

            module: modules/api/ctrl
            method: index
            inputs: {key: "val"}
        */

        // var pathArray = req._parsedUrl.pathname.split("/").splice(1),
        //     request = {
        //         method: pathArray.pop(),
        //         module: pathArray.join("/"),
        //         inputs: res.query || {}
        //     };

        var request = {
                module: req.query.module,
                method: req.query.method,
                inputs: {}
            };

        requirejs(["lib/handlers/dispatcher", "lib/utils"], function (dispatcher, utils) {

            dispatcher.dispatch(request, {

                done: function (data, meta) {
                    this.flush(data, meta);
                    res.end();
                },

                flush: function (data, meta) {
                    if (data) {
                        res.write(data);
                    }
                }
            });
        });
    };
};